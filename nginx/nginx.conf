user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Enhanced Performance Settings for CDN
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Buffer settings for better performance
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 8k;
    output_buffers 2 32k;
    postpone_output 1460;
    
    # CDN and cache settings
    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Enable HTTP/2 server push
    http2_push_preload on;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Enhanced Gzip Configuration for CDN
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        text/x-js
        text/richtext
        text/xsd
        text/xsl
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype
        image/svg+xml
        image/x-icon
        application/x-web-app-manifest+json
        application/manifest+json;

    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: ws:; media-src 'self'; object-src 'none'; child-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';";

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream Configuration
    upstream fieldsync_app {
        least_conn;
        server fieldsync-app:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream fieldsync_api {
        least_conn;
        server fieldsync-app:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main Server Configuration
    server {
        listen 80;
        server_name localhost fieldsync.local;
        
        # Redirect HTTP to HTTPS (if SSL is configured)
        # return 301 https://$server_name$request_uri;

        # Connection limits
        limit_conn conn_limit_per_ip 20;

        # API Routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://fieldsync_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer sizes
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;
            proxy_busy_buffers_size 128k;
        }

        # Authentication routes with stricter rate limiting
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://fieldsync_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket Support for real-time features
        location /socket.io/ {
            proxy_pass http://fieldsync_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files with aggressive caching (Next.js static assets)
        location /_next/static/ {
            proxy_pass http://fieldsync_app;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            # Enable gzip for all static files
            gzip_static on;
            
            # Set optimal headers for CDN
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            
            # Enable HTTP/2 push for critical resources
            location ~* \.(css|js)$ {
                add_header Link "</css/critical.css>; rel=preload; as=style" always;
                add_header Link "</js/app.js>; rel=preload; as=script" always;
            }
        }

        # CDN-optimized image serving with WebP support
        location /_next/image/ {
            proxy_pass http://fieldsync_app;
            expires 30d;
            add_header Cache-Control "public, stale-while-revalidate=86400";
            add_header X-Cache-Status "IMAGE";
            
            # WebP support
            location ~* \.(jpg|jpeg|png)$ {
                add_header Vary Accept;
                try_files $uri$webp_suffix $uri =404;
            }
            
            # Image optimization headers
            add_header X-Content-Type-Options nosniff;
            add_header Accept-Ranges bytes;
        }

        # Static asset CDN with file type optimization
        location ~* \.(css|js|woff2?|ttf|eot|svg|ico|png|jpg|jpeg|gif|webp|avif)$ {
            proxy_pass http://fieldsync_app;
            
            # Cache duration based on file type
            if ($uri ~* \.(css|js)$) {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            if ($uri ~* \.(woff2?|ttf|eot)$) {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Access-Control-Allow-Origin "*";
            }
            if ($uri ~* \.(png|jpg|jpeg|gif|webp|avif|svg|ico)$) {
                expires 30d;
                add_header Cache-Control "public, stale-while-revalidate=86400";
            }
            
            # CDN optimization headers
            add_header X-Cache-Status "CDN";
            add_header X-Content-Type-Options nosniff;
            add_header Accept-Ranges bytes;
            
            # Enable gzip for text-based assets
            gzip_vary on;
        }

        # Service worker caching strategy
        location /sw.js {
            proxy_pass http://fieldsync_app;
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header X-Cache-Status "SERVICE_WORKER";
        }

        # Manifest and PWA files
        location ~* \.(webmanifest|json)$ {
            proxy_pass http://fieldsync_app;
            expires 1d;
            add_header Cache-Control "public, must-revalidate";
            add_header X-Cache-Status "MANIFEST";
        }

        # Main application
        location / {
            proxy_pass http://fieldsync_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # File upload handling
        location /upload {
            client_max_body_size 100M;
            proxy_pass http://fieldsync_api;
            proxy_request_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS Server Configuration (Uncomment when SSL certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost fieldsync.local;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;
    #
    #     # Modern configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #
    #     # Include the same location blocks as HTTP server
    # }

    # Server for monitoring tools (if enabled)
    server {
        listen 8080;
        server_name monitoring.fieldsync.local;

        location / {
            return 403;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;
            deny all;
        }

        location /metrics {
            access_log off;
            allow 172.20.0.0/16;
            deny all;
            # Prometheus metrics endpoint
            proxy_pass http://fieldsync_app/metrics;
        }
    }
}