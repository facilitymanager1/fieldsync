apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fieldsync-ingress
  namespace: fieldsync-prod
  labels:
    app: fieldsync
    environment: production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.fieldsync.io"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  tls:
  - hosts:
    - app.fieldsync.io
    - api.fieldsync.io
    secretName: fieldsync-tls
  rules:
  - host: app.fieldsync.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fieldsync-service
            port:
              number: 3000
  - host: api.fieldsync.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fieldsync-service
            port:
              number: 3001